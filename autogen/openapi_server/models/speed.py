# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Speed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, speed_id=None, start_time=None, end_time=None, avg_speed=None, lat_start=None, lon_start=None, lat_end=None, lon_end=None):  # noqa: E501
        """Speed - a model defined in OpenAPI

        :param speed_id: The speed_id of this Speed.  # noqa: E501
        :type speed_id: int
        :param start_time: The start_time of this Speed.  # noqa: E501
        :type start_time: str
        :param end_time: The end_time of this Speed.  # noqa: E501
        :type end_time: str
        :param avg_speed: The avg_speed of this Speed.  # noqa: E501
        :type avg_speed: float
        :param lat_start: The lat_start of this Speed.  # noqa: E501
        :type lat_start: float
        :param lon_start: The lon_start of this Speed.  # noqa: E501
        :type lon_start: float
        :param lat_end: The lat_end of this Speed.  # noqa: E501
        :type lat_end: float
        :param lon_end: The lon_end of this Speed.  # noqa: E501
        :type lon_end: float
        """
        self.openapi_types = {
            'speed_id': int,
            'start_time': str,
            'end_time': str,
            'avg_speed': float,
            'lat_start': float,
            'lon_start': float,
            'lat_end': float,
            'lon_end': float
        }

        self.attribute_map = {
            'speed_id': 'speedId',
            'start_time': 'startTime',
            'end_time': 'endTime',
            'avg_speed': 'avgSpeed',
            'lat_start': 'latStart',
            'lon_start': 'lonStart',
            'lat_end': 'latEnd',
            'lon_end': 'lonEnd'
        }

        self._speed_id = speed_id
        self._start_time = start_time
        self._end_time = end_time
        self._avg_speed = avg_speed
        self._lat_start = lat_start
        self._lon_start = lon_start
        self._lat_end = lat_end
        self._lon_end = lon_end

    @classmethod
    def from_dict(cls, dikt) -> 'Speed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Speed of this Speed.  # noqa: E501
        :rtype: Speed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def speed_id(self):
        """Gets the speed_id of this Speed.


        :return: The speed_id of this Speed.
        :rtype: int
        """
        return self._speed_id

    @speed_id.setter
    def speed_id(self, speed_id):
        """Sets the speed_id of this Speed.


        :param speed_id: The speed_id of this Speed.
        :type speed_id: int
        """

        self._speed_id = speed_id

    @property
    def start_time(self):
        """Gets the start_time of this Speed.


        :return: The start_time of this Speed.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this Speed.


        :param start_time: The start_time of this Speed.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this Speed.


        :return: The end_time of this Speed.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this Speed.


        :param end_time: The end_time of this Speed.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def avg_speed(self):
        """Gets the avg_speed of this Speed.

        average speed  # noqa: E501

        :return: The avg_speed of this Speed.
        :rtype: float
        """
        return self._avg_speed

    @avg_speed.setter
    def avg_speed(self, avg_speed):
        """Sets the avg_speed of this Speed.

        average speed  # noqa: E501

        :param avg_speed: The avg_speed of this Speed.
        :type avg_speed: float
        """

        self._avg_speed = avg_speed

    @property
    def lat_start(self):
        """Gets the lat_start of this Speed.


        :return: The lat_start of this Speed.
        :rtype: float
        """
        return self._lat_start

    @lat_start.setter
    def lat_start(self, lat_start):
        """Sets the lat_start of this Speed.


        :param lat_start: The lat_start of this Speed.
        :type lat_start: float
        """

        self._lat_start = lat_start

    @property
    def lon_start(self):
        """Gets the lon_start of this Speed.


        :return: The lon_start of this Speed.
        :rtype: float
        """
        return self._lon_start

    @lon_start.setter
    def lon_start(self, lon_start):
        """Sets the lon_start of this Speed.


        :param lon_start: The lon_start of this Speed.
        :type lon_start: float
        """

        self._lon_start = lon_start

    @property
    def lat_end(self):
        """Gets the lat_end of this Speed.


        :return: The lat_end of this Speed.
        :rtype: float
        """
        return self._lat_end

    @lat_end.setter
    def lat_end(self, lat_end):
        """Sets the lat_end of this Speed.


        :param lat_end: The lat_end of this Speed.
        :type lat_end: float
        """

        self._lat_end = lat_end

    @property
    def lon_end(self):
        """Gets the lon_end of this Speed.


        :return: The lon_end of this Speed.
        :rtype: float
        """
        return self._lon_end

    @lon_end.setter
    def lon_end(self, lon_end):
        """Sets the lon_end of this Speed.


        :param lon_end: The lon_end of this Speed.
        :type lon_end: float
        """

        self._lon_end = lon_end
